From: <Saved by Blink>
Snapshot-Content-Location: https://web.archive.org/web/20180718113252/https://www.cs.indiana.edu/chezscheme/match/
Subject: Using Match
Date: Sat, 10 Jun 2023 05:44:04 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--nPmWhCeRIg3jfxHsJ6UcEKc0rqcgmjfkQF41N0LW9S----"


------MultipartBoundary--nPmWhCeRIg3jfxHsJ6UcEKc0rqcgmjfkQF41N0LW9S----
Content-Type: text/html
Content-ID: <frame-B3757BE9AA93AF9C9A03C14B4EF72DB6@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://web.archive.org/web/20180718113252/https://www.cs.indiana.edu/chezscheme/match/

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.=
w3.org/TR/html4/loose.dtd"><!-- DO NOT EDIT THIS FILE--><!-- Edit the .tex =
version instead--><html><head><meta http-equiv=3D"Content-Type" content=3D"=
text/html; charset=3DUTF-8">




<link rel=3D"stylesheet" type=3D"text/css" href=3D"https://web.archive.org/=
_static/css/banner-styles.css?v=3DS1zqJCYt">
<link rel=3D"stylesheet" type=3D"text/css" href=3D"https://web.archive.org/=
_static/css/iconochive.css?v=3DqtvMKcIJ">
<!-- End Wayback Rewrite JS Include -->

<title>Using Match</title>
<link href=3D"https://web.archive.org/web/20180718113252cs_/https://www.cs.=
indiana.edu/chezscheme/match/base.css" rel=3D"stylesheet" type=3D"text/css"=
>
</head>
<body><!-- BEGIN WAYBACK TOOLBAR INSERT -->

<div id=3D"wm-ipp-base" lang=3D"en" style=3D"display: block; direction: ltr=
;">
<template shadowmode=3D"closed"><div id=3D"wm-ipp" style=3D"position:fixed;=
left:0;top:0;right:0;">
<div id=3D"donato" style=3D"position:relative;width:100%;">
  <div id=3D"donato-base">
    <iframe id=3D"donato-if" src=3D"cid:frame-477E1324CC670A0426EA6B459EC52=
74B@mhtml.blink" scrolling=3D"no" frameborder=3D"0" style=3D"width:100%; he=
ight:100%">
    </iframe>
  </div>
</div><div id=3D"wm-ipp-inside">
  <div id=3D"wm-toolbar" style=3D"position:relative;display:flex;flex-flow:=
row nowrap;justify-content:space-between;">
    <div id=3D"wm-logo" style=3D"/*width:110px;*/padding-top:12px;">
      <a href=3D"https://web.archive.org/web/" title=3D"Wayback Machine hom=
e page"><img src=3D"https://web.archive.org/_static/images/toolbar/wayback-=
toolbar-logo-200.png" alt=3D"Wayback Machine" style=3D"width:100px" border=
=3D"0"></a>
    </div>
    <div class=3D"c" style=3D"display:flex;flex-flow:column nowrap;justify-=
content:space-between;flex:1;">
      <form class=3D"u" style=3D"display:flex;flex-direction:row;flex-wrap:=
nowrap;" target=3D"_top" method=3D"get" action=3D"https://web.archive.org/w=
eb/submit" name=3D"wmtb" id=3D"wmtb"><input type=3D"text" name=3D"url" id=
=3D"wmtbURL" value=3D"https://www.cs.indiana.edu/chezscheme/match/" style=
=3D"flex:1;" autocomplete=3D"off"><input type=3D"submit" value=3D"Go">
      </form>
      <div style=3D"display:flex;flex-flow:row nowrap;align-items:flex-end;=
">
                <div class=3D"s" id=3D"wm-nav-captures" style=3D"flex:1;"><=
a class=3D"t" href=3D"https://web.archive.org/web/*/https://www.cs.indiana.=
edu/chezscheme/match/" title=3D"See a list of every capture for this URL">5=
9 captures</a><div class=3D"r" title=3D"Timespan for captures of this URL">=
10 Mar 2010 - 26 May 2023</div></div>
        <div class=3D"k">
          <a href=3D"https://web.archive.org/web/20180718113252/https://www=
.cs.indiana.edu/chezscheme/match/" id=3D"wm-graph-anchor">
            <div id=3D"wm-ipp-sparkline" title=3D"Explore captures for this=
 URL" style=3D"position: relative">
              <canvas id=3D"wm-sparkline-canvas" width=3D"700" height=3D"27=
" border=3D"0"></canvas>
            <div class=3D"yt" style=3D"display: none; width: 25px; height: =
27px;"></div><div class=3D"mt" style=3D"display: none; width: 2px; height: =
27px;"></div></div>
          </a>
        </div>
      </div>
    </div>
    <div class=3D"n">
      <table>
        <tbody>
          <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
          <tr class=3D"m">
            <td class=3D"b" nowrap=3D"nowrap"><a href=3D"https://web.archiv=
e.org/web/20160826073240/http://www.cs.indiana.edu/chezscheme/match/" title=
=3D"26 Aug 2016"><strong>Aug</strong></a></td>
            <td class=3D"c" id=3D"displayMonthEl" title=3D"You are here: 11=
:32:52 Jul 18, 2018">JUL</td>
            <td class=3D"f" nowrap=3D"nowrap"><a href=3D"https://web.archiv=
e.org/web/20181006202111/http://www.cs.indiana.edu/chezscheme/match/" title=
=3D"06 Oct 2018"><strong>Oct</strong></a></td>
          </tr>
          <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
          <tr class=3D"d">
            <td class=3D"b" nowrap=3D"nowrap"><a href=3D"https://web.archiv=
e.org/web/20180717013259/https://www.cs.indiana.edu/chezscheme/match/" titl=
e=3D"01:32:59 Jul 17, 2018"><img src=3D"https://web.archive.org/_static/ima=
ges/toolbar/wm_tb_prv_on.png" alt=3D"Previous capture" width=3D"14" height=
=3D"16" border=3D"0"></a></td>
            <td class=3D"c" id=3D"displayDayEl" style=3D"width:34px;font-si=
ze:22px;white-space:nowrap;" title=3D"You are here: 11:32:52 Jul 18, 2018">=
18</td>
            <td class=3D"f" nowrap=3D"nowrap"><a href=3D"https://web.archiv=
e.org/web/20180719114815/https://www.cs.indiana.edu/chezscheme/match/" titl=
e=3D"11:48:15 Jul 19, 2018"><img src=3D"https://web.archive.org/_static/ima=
ges/toolbar/wm_tb_nxt_on.png" alt=3D"Next capture" width=3D"14" height=3D"1=
6" border=3D"0"></a></td>
          </tr>
          <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
          <tr class=3D"y">
            <td class=3D"b" nowrap=3D"nowrap"><a href=3D"https://web.archiv=
e.org/web/20160826073240/http://www.cs.indiana.edu/chezscheme/match/" title=
=3D"26 Aug 2016"><strong>2016</strong></a></td>
            <td class=3D"c" id=3D"displayYearEl" title=3D"You are here: 11:=
32:52 Jul 18, 2018">2018</td>
            <td class=3D"f" nowrap=3D"nowrap"><a href=3D"https://web.archiv=
e.org/web/20190926213449/http://www.cs.indiana.edu:80/chezscheme/match" tit=
le=3D"26 Sep 2019"><strong>2019</strong></a></td>
          </tr>
        </tbody>
      </table>
    </div>
    <div class=3D"r" style=3D"display:flex;flex-flow:column nowrap;align-it=
ems:flex-end;justify-content:space-between;">
      <div id=3D"wm-btns" style=3D"text-align:right;height:23px;">
                <span class=3D"xxs">
          <div id=3D"wm-save-snapshot-success">success</div>
          <div id=3D"wm-save-snapshot-fail">fail</div>
          <a id=3D"wm-save-snapshot-open" href=3D"https://web.archive.org/w=
eb/20180718113252/https://www.cs.indiana.edu/chezscheme/match/#" title=3D"S=
hare via My Web Archive" style=3D"display: none;">
            <span class=3D"iconochive-web"></span>
          </a>
          <a href=3D"https://archive.org/account/login.php" title=3D"Sign I=
n" id=3D"wm-sign-in" style=3D"display: inline-block;">
            <span class=3D"iconochive-person"></span>
          </a>
          <span id=3D"wm-save-snapshot-in-progress" class=3D"iconochive-web=
" style=3D"display: none;"></span>
        </span>
                <a class=3D"xxs" href=3D"http://faq.web.archive.org/" title=
=3D"Get some help using the Wayback Machine" style=3D"top:-6px;"><span clas=
s=3D"iconochive-question" style=3D"color:rgb(87,186,244);font-size:160%;"><=
/span></a>
        <a id=3D"wm-tb-close" href=3D"https://web.archive.org/web/201807181=
13252/https://www.cs.indiana.edu/chezscheme/match/#close" style=3D"top:-2px=
;" title=3D"Close the toolbar"><span class=3D"iconochive-remove-circle" sty=
le=3D"color:#888888;font-size:240%;"></span></a>
      </div>
      <div id=3D"wm-share" class=3D"xxs">
        <a href=3D"https://web.archive.org/web/20180718113252/http://web.ar=
chive.org/screenshot/https://www.cs.indiana.edu/chezscheme/match/" id=3D"wm=
-screenshot" title=3D"screenshot" style=3D"visibility: hidden;">
          <span class=3D"wm-icon-screen-shot"></span>
        </a>
        <a href=3D"https://web.archive.org/web/20180718113252/https://www.c=
s.indiana.edu/chezscheme/match/#" id=3D"wm-video" title=3D"video">
          <span class=3D"iconochive-movies"></span>
        </a>
        <a id=3D"wm-share-facebook" href=3D"https://web.archive.org/web/201=
80718113252/https://www.cs.indiana.edu/chezscheme/match/#" data-url=3D"http=
s://web.archive.org/web/20180718113252/https://www.cs.indiana.edu/chezschem=
e/match/" title=3D"Share on Facebook" style=3D"margin-right:5px;" target=3D=
"_blank"><span class=3D"iconochive-facebook" style=3D"color:#3b5998;font-si=
ze:160%;"></span></a>
        <a id=3D"wm-share-twitter" href=3D"https://web.archive.org/web/2018=
0718113252/https://www.cs.indiana.edu/chezscheme/match/#" data-url=3D"https=
://web.archive.org/web/20180718113252/https://www.cs.indiana.edu/chezscheme=
/match/" title=3D"Share on Twitter" style=3D"margin-right:5px;" target=3D"_=
blank"><span class=3D"iconochive-twitter" style=3D"color:#1dcaff;font-size:=
160%;"></span></a>
      </div>
      <div style=3D"padding-right:2px;text-align:right;white-space:nowrap;"=
>
        <a id=3D"wm-expand" class=3D"wm-btn wm-closed" href=3D"https://web.=
archive.org/web/20180718113252/https://www.cs.indiana.edu/chezscheme/match/=
#expand"><span id=3D"wm-expand-icon" class=3D"iconochive-down-solid"></span=
> <span class=3D"xxs" style=3D"font-size:80%;">About this capture</span></a=
>
      </div>
    </div>
  </div>
    <div id=3D"wm-capinfo" style=3D"border-top:1px solid #777;display:none;=
 overflow: hidden">
        <div id=3D"wm-capinfo-notice" source=3D"api"></div>
                <div id=3D"wm-capinfo-collected-by">
    <div style=3D"background-color:#666;color:#fff;font-weight:bold;text-al=
ign:center">COLLECTED BY</div>
    <div style=3D"padding:3px;position:relative" id=3D"wm-collected-by-cont=
ent">
            <div style=3D"display:inline-block;vertical-align:top;width:50%=
;">
			<span class=3D"c-logo" style=3D"background-image:url(https://archive.org=
/services/img/webwidecrawl);"></span>
		Organization: <a style=3D"color:#33f;" href=3D"https://archive.org/detail=
s/webwidecrawl" target=3D"_new"><span class=3D"wm-title">Internet Archive</=
span></a>
		<div style=3D"max-height:75px;overflow:hidden;position:relative;">
	  <div style=3D"position:absolute;top:0;left:0;width:100%;height:75px;back=
ground:linear-gradient(to bottom,rgba(255,255,255,0) 0%,rgba(255,255,255,0)=
 90%,rgba(255,255,255,255) 100%);"></div>
	  The Internet Archive discovers and captures web pages through many diffe=
rent web crawls.

At any given time several distinct crawls are running, some for months, and=
 some every day or longer.

View the web archive through the <a href=3D"http://archive.org/web/web.php"=
>Wayback Machine</a>.
	</div>
	      </div>
      <div style=3D"display:inline-block;vertical-align:top;width:49%;">
			<span class=3D"c-logo" style=3D"background-image:url(https://archive.org=
/services/img/liveweb)"></span>
		<div>Collection: <a style=3D"color:#33f;" href=3D"https://archive.org/det=
ails/liveweb" target=3D"_new"><span class=3D"wm-title">Live Web Proxy Crawl=
s</span></a></div>
		<div style=3D"max-height:75px;overflow:hidden;position:relative;">
	  <div style=3D"position:absolute;top:0;left:0;width:100%;height:75px;back=
ground:linear-gradient(to bottom,rgba(255,255,255,0) 0%,rgba(255,255,255,0)=
 90%,rgba(255,255,255,255) 100%);"></div>
	  Content crawled via the <a href=3D"http://archive.org/web/web.php">Wayba=
ck Machine</a> Live Proxy mostly by the Save Page Now feature on web.archiv=
e.org.
<br><br>
Liveweb proxy is a component of Internet Archive=E2=80=99s wayback machine =
project. The liveweb proxy captures the content of a web page in real time,=
 archives it into a ARC or WARC file and returns the ARC/WARC record back t=
o the wayback machine to process. The recorded ARC/WARC file becomes part o=
f the wayback machine in due course of time.
<br>
	</div>
	      </div>
    </div>
    </div>
    <div id=3D"wm-capinfo-timestamps">
    <div style=3D"background-color:#666;color:#fff;font-weight:bold;text-al=
ign:center" title=3D"Timestamps for the elements of this page">TIMESTAMPS</=
div>
    <div>
      <div id=3D"wm-capresources" style=3D"margin:0 5px 5px 5px;max-height:=
250px;overflow-y:scroll !important"></div>
      <div id=3D"wm-capresources-loading" style=3D"text-align:left;margin:0=
 20px 5px 5px;display:none"><img src=3D"https://web.archive.org/_static/ima=
ges/loading.gif" alt=3D"loading"></div>
    </div>
    </div>
  </div></div></div><link rel=3D"stylesheet" type=3D"text/css" href=3D"http=
s://web.archive.org/_static/css/banner-styles.css?v=3DS1zqJCYt"><link rel=
=3D"stylesheet" type=3D"text/css" href=3D"https://web.archive.org/_static/c=
ss/iconochive.css?v=3DqtvMKcIJ"><div class=3D"wb-autocomplete-suggestions "=
></div></template></div><div id=3D"wm-ipp-print">The Wayback Machine - http=
s://web.archive.org/web/20180718113252/https://www.cs.indiana.edu/chezschem=
e/match/</div>

<!-- END WAYBACK TOOLBAR INSERT -->
=20




<h1>Using Match</h1>
<h2>R. Kent Dybvig</h2>
<h3>January 17, 2010</h3>


<p>

</p><table cellpadding=3D"0" cellspacing=3D"0">

 =20
 =20
=20
</table>


<p>
This document describes a pattern matcher, unimaginatively called
<tt>match</tt>, the source code for which is available at:

</p><p>
<a class=3D"ref" href=3D"https://web.archive.org/web/20180718113252/http://=
www.cs.indiana.edu/chezscheme/match/match.ss">http://www.cs.indiana.edu/che=
zscheme/match/match.ss</a>

</p><p>
A <tt>match</tt> expression looks a lot like a <tt>case</tt> expression,
except that the keys are replaced with a pattern to be matched against
the input.
A <tt>match</tt> expression has the general form below.

</p><p>

</p><p><tt>(match&nbsp;<i>input-expr</i>&nbsp;<i>clause</i>)</tt>
</p><p>Each clause consists of an input pattern, an optional guard, and a
set of expressions.

</p><p>

</p><p><tt>[<i>input-pattern</i>&nbsp;<i>expr1</i>&nbsp;<i>expr2</i>&nbsp;.=
..]</tt>
</p><p>or

</p><p>

</p><p><tt>[<i>input-pattern</i>&nbsp;(guard&nbsp;<i>guard-expr</i>&nbsp;..=
.)&nbsp;<i>expr1</i>&nbsp;<i>expr2</i>&nbsp;...]</tt>
</p><p>As with <tt>case</tt>, the input expression is evaluated to produce
the input value, and the first clause the input value matches,
if any, is selected.
The output expressions of the selected clause are evaluated in sequence,
and the value of the last expression is returned.

</p><p>
An input value matches a clause if it fits the clause's pattern and
passes the clause's guards, if any.
Patterns may contain symbolic constants, which must match exactly, and
pattern variables, which match any input. =20
Pattern variables are prefixed by commas; symbolic constants are not.

</p><p>

</p><p><tt>(match&nbsp;'(a&nbsp;17&nbsp;37)<br>

&nbsp;&nbsp;[(a&nbsp;,x)&nbsp;1]<br>

&nbsp;&nbsp;[(b&nbsp;,x&nbsp;,y)&nbsp;2]<br>

&nbsp;&nbsp;[(a&nbsp;,x&nbsp;,y)&nbsp;3])&nbsp;<img src=3D"https://web.arch=
ive.org/web/20180718113252im_/https://www.cs.indiana.edu/chezscheme/match/m=
ath/match/0.gif" alt=3D"<graphic>">&nbsp;3</tt>
</p><p>The first clause fails to match because there are three items in the
input list, and the pattern has only two.
The second clause fails because <tt>b</tt> does not match <tt>a</tt>.

</p><p>
In the output expression, the values of the pattern variables are
bound to the corresponding pieces of input.

</p><p>

</p><p><tt>(match&nbsp;'(a&nbsp;17&nbsp;37)<br>

&nbsp;&nbsp;[(a&nbsp;,x)&nbsp;(-&nbsp;x)]<br>

&nbsp;&nbsp;[(b&nbsp;,x&nbsp;,y)&nbsp;(+&nbsp;x&nbsp;y)]<br>

&nbsp;&nbsp;[(a&nbsp;,x&nbsp;,y)&nbsp;(*&nbsp;x&nbsp;y)])&nbsp;<img src=3D"=
https://web.archive.org/web/20180718113252im_/https://www.cs.indiana.edu/ch=
ezscheme/match/math/match/0.gif" alt=3D"<graphic>">&nbsp;629</tt>
</p><p>When followed by an ellipsis (<tt>...</tt>), a pattern variable
represents a sequence of input values.

</p><p>

</p><p><tt>(match&nbsp;'(a&nbsp;17&nbsp;37)&nbsp;[(a&nbsp;,x*&nbsp;...)&nbs=
p;x*])&nbsp;<img src=3D"https://web.archive.org/web/20180718113252im_/https=
://www.cs.indiana.edu/chezscheme/match/math/match/0.gif" alt=3D"<graphic>">=
&nbsp;(17&nbsp;37)</tt>
</p><p>By convention, we place a <tt>*</tt> suffix on each pattern variable
that matches a sequence of input expressions.
This is just a convention, however, and not part of the syntax of
<tt>match</tt>.

</p><p>
Ellipses can follow a structured pattern containing one or more
pattern variables.

</p><p>

</p><p><tt>(match&nbsp;'(say&nbsp;(a&nbsp;time)&nbsp;(stitch&nbsp;saves)&nb=
sp;(in&nbsp;nine))<br>

&nbsp;&nbsp;[(say&nbsp;(,x*&nbsp;,y*)&nbsp;...)&nbsp;(append&nbsp;x*&nbsp;y=
*)])&nbsp;<img src=3D"https://web.archive.org/web/20180718113252im_/https:/=
/www.cs.indiana.edu/chezscheme/match/math/match/0.gif" alt=3D"<graphic>">&n=
bsp;(a&nbsp;stitch&nbsp;in&nbsp;time&nbsp;saves&nbsp;nine)</tt>
</p><p>Ellipses can be nested, producing sequences of sequences of values.

</p><p>

</p><p><tt>(match&nbsp;'((a&nbsp;b&nbsp;c&nbsp;d)&nbsp;(e&nbsp;f&nbsp;g)&nb=
sp;(h&nbsp;i)&nbsp;(j))<br>

&nbsp;&nbsp;[((,x*&nbsp;,y**&nbsp;...)&nbsp;...)<br>

&nbsp;&nbsp;&nbsp;(list&nbsp;x*&nbsp;y**)])&nbsp;<img src=3D"https://web.ar=
chive.org/web/20180718113252im_/https://www.cs.indiana.edu/chezscheme/match=
/math/match/0.gif" alt=3D"<graphic>">&nbsp;((a&nbsp;e&nbsp;h&nbsp;j)&nbsp;(=
(b&nbsp;c&nbsp;d)&nbsp;(f&nbsp;g)&nbsp;(i)&nbsp;()))</tt>
</p><p>Recursion is frequently required while processing an input expressio=
n
with <tt>match</tt>.
Here is a simple definition of <tt>length</tt> using <tt>match</tt>.

</p><p>

</p><p><tt>(define&nbsp;length<br>

&nbsp;&nbsp;(lambda&nbsp;(ls)<br>

&nbsp;&nbsp;&nbsp;&nbsp;(match&nbsp;ls<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[()&nbsp;0]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(,x&nbsp;.&nbsp;,x*)&nbsp;(add1&nbsp;(=
length&nbsp;x*))])))</tt>
</p><p>Using ellipses may make this more clear.

</p><p>

</p><p><tt>(define&nbsp;length<br>

&nbsp;&nbsp;(lambda&nbsp;(ls)<br>

&nbsp;&nbsp;&nbsp;&nbsp;(match&nbsp;ls<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[()&nbsp;0]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(,x&nbsp;,x*&nbsp;...)&nbsp;(add1&nbsp=
;(length&nbsp;x*))])))</tt>
</p><p>Here is a more realistic example of recursion.
It also illustrates the use of guards and the use of
<tt>error</tt> to signal match errors.

</p><p>

</p><p><tt>(define&nbsp;simple-eval<br>

&nbsp;&nbsp;(lambda&nbsp;(x)<br>

&nbsp;&nbsp;&nbsp;&nbsp;(match&nbsp;x<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[,i&nbsp;(guard&nbsp;(integer?&nbsp;i))=
&nbsp;i]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(+&nbsp;,x*&nbsp;...)&nbsp;(apply&nbsp=
;+&nbsp;(map&nbsp;simple-eval&nbsp;x*))]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(*&nbsp;,x*&nbsp;...)&nbsp;(apply&nbsp=
;*&nbsp;(map&nbsp;simple-eval&nbsp;x*))]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(-&nbsp;,x&nbsp;,y)&nbsp;(-&nbsp;(simp=
le-eval&nbsp;x)&nbsp;(simple-eval&nbsp;y))]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(/&nbsp;,x&nbsp;,y)&nbsp;(/&nbsp;(simp=
le-eval&nbsp;x)&nbsp;(simple-eval&nbsp;y))]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[,x&nbsp;(error&nbsp;'simple-eval&nbsp;=
"invalid&nbsp;expression&nbsp;~s"&nbsp;x)])))</tt>
</p><p>Try out <tt>simple-eval</tt> using Chez Scheme's <tt>new-cafe</tt>
with <tt>simple-eval</tt> as the evaluation procedure:

</p><p>

</p><p><tt>&gt;&nbsp;(new-cafe&nbsp;simple-eval)<br>

&gt;&gt;&nbsp;(+&nbsp;1&nbsp;2&nbsp;3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;<br>

6<br>

&gt;&gt;&nbsp;(+&nbsp;(-&nbsp;0&nbsp;1)&nbsp;(+&nbsp;2&nbsp;3))<br>

4<br>

&gt;&gt;&nbsp;(-&nbsp;1&nbsp;2&nbsp;3)
<br>
<br>
Error&nbsp;in&nbsp;simple-eval:&nbsp;invalid&nbsp;expression&nbsp;(-&nbsp;1=
&nbsp;2&nbsp;3).<br>

Type&nbsp;(debug)&nbsp;to&nbsp;enter&nbsp;the&nbsp;debugger.<br>

&gt;&gt;&nbsp;</tt>
</p><p>Unlike <tt>case</tt> and <tt>cond</tt>, <tt>match</tt> does not have
an explicit <tt>else</tt> clause.
In fact, if a clause of the form

</p><p>

</p><p><tt>&nbsp;&nbsp;[else&nbsp;<i>expr</i>]</tt>
</p><p>is used, it matches (only) the symbol <tt>else</tt>.
To achieve the effect of a catch-all clause, <tt>simple-eval</tt>
uses the pattern <tt>,x</tt> which matches any input.

</p><p>
An even simpler version of the above uses <tt>match</tt>'s
"catamorphism" feature to perform the recursion
automatically.

</p><p>

</p><p><tt>(define&nbsp;simple-eval<br>

&nbsp;&nbsp;(lambda&nbsp;(x)<br>

&nbsp;&nbsp;&nbsp;&nbsp;(match&nbsp;x<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[,i&nbsp;(guard&nbsp;(integer?&nbsp;i))=
&nbsp;i]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(+&nbsp;,[x*]&nbsp;...)&nbsp;(apply&nb=
sp;+&nbsp;x*)]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(*&nbsp;,[x*]&nbsp;...)&nbsp;(apply&nb=
sp;*&nbsp;x*)]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(-&nbsp;,[x]&nbsp;,[y])&nbsp;(-&nbsp;x=
&nbsp;y)]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(/&nbsp;,[x]&nbsp;,[y])&nbsp;(/&nbsp;x=
&nbsp;y)]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[,x&nbsp;(error&nbsp;'simple-eval&nbsp;=
"invalid&nbsp;expression&nbsp;~s"&nbsp;x)])))</tt>
</p><p>In the second version of <tt>simple-eval</tt>, the explicit
recursive calls are gone.
Instead, the pattern variables have been written as
<tt>,[<i>var</i>]</tt>; this tells <tt>match</tt> to recur on the
matching subpart of the input before evaluating the
output expressions of the clause.
Parentheses may be used in place of brackets, i.e.,
<tt>,(<i>var</i>)</tt>; we use brackets for readability.

</p><p>
Here is another definition of <tt>length</tt>, this time using the
catamorphism feature.

</p><p>

</p><p><tt>(define&nbsp;length<br>

&nbsp;&nbsp;(lambda&nbsp;(x)<br>

&nbsp;&nbsp;&nbsp;&nbsp;(match&nbsp;x<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[()&nbsp;0]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(,x&nbsp;.&nbsp;,[y])&nbsp;(+&nbsp;y&n=
bsp;1)])))</tt>
</p><p>Since we usually use <tt>match</tt> to write translators from one
language to another, we usually need to build an output expression,
rather than return an output value.
For example, the following converts <tt>let</tt> expressions into
equivalent <tt>lambda</tt> applications.

</p><p>

</p><p><tt>(define&nbsp;translate<br>

&nbsp;&nbsp;(lambda&nbsp;(x)<br>

&nbsp;&nbsp;&nbsp;&nbsp;(match&nbsp;x<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(let&nbsp;((,var*&nbsp;,expr*)&nbsp;..=
.)&nbsp;,body&nbsp;,body*&nbsp;...)<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`((lambda&nbsp;,var*&nbsp;,body&n=
bsp;,@body*)&nbsp;,@expr*)]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[,x&nbsp;(error&nbsp;'translate&nbsp;"i=
nvalid&nbsp;expression:&nbsp;~s"&nbsp;x)])))
<br>
<br>
(translate&nbsp;'(let&nbsp;((x&nbsp;3)&nbsp;(y&nbsp;4))&nbsp;(+&nbsp;x&nbsp=
;y)))&nbsp;<img src=3D"https://web.archive.org/web/20180718113252im_/https:=
//www.cs.indiana.edu/chezscheme/match/math/match/0.gif" alt=3D"<graphic>">&=
nbsp;((lambda&nbsp;(x&nbsp;y)&nbsp;(+&nbsp;x&nbsp;y))&nbsp;3&nbsp;4)</tt>
</p><p>This procedure uses Scheme's <tt>quasiquote</tt> (backquote),
<tt>unquote</tt> (comma), and <tt>unquote-splicing</tt> (comma-at)
to piece together the output form.
These are not described here, but are described in
<a class=3D"ref" href=3D"https://web.archive.org/web/20180718113252/http://=
www.scheme.com/tspl4/objects.html#SECTQUOTING"><i>The
Scheme Programming Language</i></a>.

</p><p>
One useful feature of <tt>quasiquote</tt> not described in these documents
is a <tt>match</tt> extension that allows ellipses to be used in place
of <tt>unquote-splicing</tt>, which often leads to more readable code.

</p><p>

</p><p><tt>(define&nbsp;translate<br>

&nbsp;&nbsp;(lambda&nbsp;(x)<br>

&nbsp;&nbsp;&nbsp;&nbsp;(match&nbsp;x<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(let&nbsp;((,var*&nbsp;,expr*)&nbsp;..=
.)&nbsp;,body&nbsp;,body*&nbsp;...)<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`((lambda&nbsp;,var*&nbsp;,body&n=
bsp;,body*&nbsp;...)&nbsp;,expr*&nbsp;...)]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[,x&nbsp;(error&nbsp;'translate&nbsp;"i=
nvalid&nbsp;expression:&nbsp;~s"&nbsp;x)])))</tt>
</p><p>Within each subform followed by an ellipsis, each
comma-prefixed item must be a list and all such items within the same
subform must have the same length.
The following procedure extracts two lists from its input and merges
them to form a list of pairs.

</p><p>

</p><p><tt>(define&nbsp;(f&nbsp;x)<br>

&nbsp;&nbsp;(match&nbsp;x<br>

&nbsp;&nbsp;&nbsp;&nbsp;[((,a&nbsp;...)&nbsp;(,b&nbsp;...))&nbsp;`((,a&nbsp=
;.&nbsp;,b)&nbsp;...)]))<br>

(f&nbsp;'((1&nbsp;2&nbsp;3)&nbsp;(a&nbsp;b&nbsp;c)))&nbsp;<img src=3D"https=
://web.archive.org/web/20180718113252im_/https://www.cs.indiana.edu/chezsch=
eme/match/math/match/0.gif" alt=3D"<graphic>">&nbsp;((1&nbsp;.&nbsp;a)&nbsp=
;(2&nbsp;.&nbsp;b)&nbsp;(3&nbsp;.&nbsp;c))</tt>
</p><p>It fails if the two lists have different lengths.

</p><p>

</p><p><tt>(f&nbsp;'((1&nbsp;2&nbsp;3)&nbsp;(a&nbsp;b)))&nbsp;<img src=3D"h=
ttps://web.archive.org/web/20180718113252im_/https://www.cs.indiana.edu/che=
zscheme/match/math/match/0.gif" alt=3D"<graphic>">&nbsp;<i>error</i></tt>
</p><p>The following also fails because one of the items is not even a list=
.

</p><p>

</p><p><tt>(define&nbsp;(f&nbsp;x)<br>

&nbsp;&nbsp;(match&nbsp;x<br>

&nbsp;&nbsp;&nbsp;&nbsp;[(,a&nbsp;,b&nbsp;...)&nbsp;`((,a&nbsp;,b)&nbsp;...=
)]))<br>

(f&nbsp;'(1&nbsp;2&nbsp;3&nbsp;4))&nbsp;<img src=3D"https://web.archive.org=
/web/20180718113252im_/https://www.cs.indiana.edu/chezscheme/match/math/mat=
ch/0.gif" alt=3D"<graphic>">&nbsp;<i>error</i></tt>
</p><p>A subform followed by an ellipses may be contained with a larger sub=
form
that is also followed by an ellipsis.
In this case, each comma-prefixed item must be a list of lists, each such
item must have the same length, and the corresponding sublists of each
such item must have the same lengths.
This requirement generalizes to comma-prefixed items nested within
more than two levels of ellispis-followed subforms.

</p><p>
The following procedure illustrates two levels of nested ellipses in both
the input and output.
It converts unnamed <tt>let</tt> expressions into
direct <tt>lambda</tt> applications, where the <tt>let</tt> has been
generalized to allow an implicit <tt>begin</tt> in each right-hand-side
expression.

</p><p>

</p><p><tt>(define&nbsp;(f&nbsp;x)<br>

&nbsp;&nbsp;(match&nbsp;x<br>

&nbsp;&nbsp;&nbsp;&nbsp;[(let&nbsp;([,x&nbsp;,e1&nbsp;...]&nbsp;...)&nbsp;,=
b1&nbsp;,b2&nbsp;...)<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`((lambda&nbsp;(,x&nbsp;...)&nbsp;,b1&nbsp;,b=
2&nbsp;...)<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(begin&nbsp;,e1&nbsp;...)&nbsp;..=
.)]))<br>

(f&nbsp;'(let&nbsp;((x&nbsp;(write&nbsp;'one)&nbsp;3)&nbsp;(y&nbsp;(write&n=
bsp;'two)&nbsp;4))&nbsp;(list&nbsp;x&nbsp;y)))&nbsp;<img src=3D"https://web=
.archive.org/web/20180718113252im_/https://www.cs.indiana.edu/chezscheme/ma=
tch/math/match/0.gif" alt=3D"<graphic>"><br>

&nbsp;&nbsp;((lambda&nbsp;(x&nbsp;y)&nbsp;(list&nbsp;x&nbsp;y))<br>

&nbsp;&nbsp;&nbsp;(begin&nbsp;(write&nbsp;'one)&nbsp;3)<br>

&nbsp;&nbsp;&nbsp;(begin&nbsp;(write&nbsp;'two)&nbsp;4))</tt>
</p><p>In the output, a subform may be followed directly by two or more
ellipses; the requirements are the same as for nested ellipses, but
the result is flattened rather than nested, as illustrated by the
following example.

</p><p>

</p><p><tt>(define&nbsp;(f&nbsp;x)<br>

&nbsp;&nbsp;(match&nbsp;x<br>

&nbsp;&nbsp;&nbsp;&nbsp;[(foo&nbsp;(,x&nbsp;...)&nbsp;...)<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`(list&nbsp;(car&nbsp;,x)&nbsp;...&nbsp;...)]=
))<br>

(f&nbsp;'(foo&nbsp;(a)&nbsp;(b&nbsp;c&nbsp;d&nbsp;e)&nbsp;()&nbsp;(f&nbsp;g=
)))&nbsp;<img src=3D"https://web.archive.org/web/20180718113252im_/https://=
www.cs.indiana.edu/chezscheme/match/math/match/0.gif" alt=3D"<graphic>"><br=
>

&nbsp;&nbsp;(list&nbsp;(car&nbsp;a)&nbsp;(car&nbsp;b)&nbsp;(car&nbsp;c)&nbs=
p;(car&nbsp;d)&nbsp;(car&nbsp;e)&nbsp;(car&nbsp;f)&nbsp;(car&nbsp;g))</tt>
</p><p>Sometimes it is useful to explicitly name the operator in a
"cata" subpattern.
Whereas <tt>,[<i>id</i>&nbsp;...]</tt> recurs to the top of the current
<tt>match</tt>, <tt>,[<i>cata</i>&nbsp;-&gt;&nbsp;<i>id</i>&nbsp;...]</tt> =
recurs
to <tt><i>cata</i></tt>.
<tt><i>cata</i></tt> must evaluate to a procedure that accepts
one argument, the input expression, and returns as many values
as there are identifiers following the <tt>-&gt;</tt>.

</p><p>
This allows processing to be split into several
mutually recursive procedures, as in the following parser for the simple
language defined by the grammar below.

</p><p>

 =20
 =20
 =20
  </p><table><tbody><tr><td nowrap=3D"">
&lt;Prog&gt;</td><td align=3D"center"><img src=3D"https://web.archive.org/w=
eb/20180718113252im_/https://www.cs.indiana.edu/chezscheme/match/math/match=
/1.gif" alt=3D"<graphic>"></td><td nowrap=3D""><tt>(program</tt> &lt;Stmt&g=
t;* &lt;Expr&gt;<tt>)</tt></td></tr><tr><td nowrap=3D"">
&lt;Stmt&gt;</td><td align=3D"center"><img src=3D"https://web.archive.org/w=
eb/20180718113252im_/https://www.cs.indiana.edu/chezscheme/match/math/match=
/1.gif" alt=3D"<graphic>"></td><td nowrap=3D""><tt>(if</tt> &lt;Expr&gt; &l=
t;Stmt&gt; &lt;Stmt&gt;<tt>)</tt></td></tr><tr><td nowrap=3D"">
          </td><td align=3D"center">|</td><td nowrap=3D""><tt>(set!</tt> &l=
t;var&gt; &lt;Expr&gt;<tt>)</tt></td></tr><tr><td nowrap=3D"">
&lt;Expr&gt;</td><td align=3D"center"><img src=3D"https://web.archive.org/w=
eb/20180718113252im_/https://www.cs.indiana.edu/chezscheme/match/math/match=
/1.gif" alt=3D"<graphic>"></td><td nowrap=3D"">&lt;var&gt;</td></tr><tr><td=
 nowrap=3D"">
          </td><td align=3D"center">|</td><td nowrap=3D"">&lt;integer&gt;</=
td></tr><tr><td nowrap=3D"">
          </td><td align=3D"center">|</td><td nowrap=3D""><tt>(if</tt> &lt;=
Expr&gt; &lt;Expr&gt; &lt;Expr&gt;<tt>)</tt></td></tr><tr><td nowrap=3D"">
          </td><td align=3D"center">|</td><td nowrap=3D""><tt>(</tt>&lt;Exp=
r&gt; &lt;Expr&gt;*<tt>)</tt>
</td></tr></tbody></table>

<p>

</p><p><tt>(define&nbsp;parse<br>

&nbsp;&nbsp;(lambda&nbsp;(x)<br>

&nbsp;&nbsp;&nbsp;&nbsp;(define&nbsp;Prog<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;(x)<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(match&nbsp;x<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(program&nbsp;=
,[Stmt&nbsp;-&gt;&nbsp;s*]&nbsp;...&nbsp;,[Expr&nbsp;-&gt;&nbsp;e])<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`(begin&n=
bsp;,s*&nbsp;...&nbsp;,e)]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[,x&nbsp;(error=
&nbsp;'parse&nbsp;"invalid&nbsp;program&nbsp;~s"&nbsp;x)])))<br>

&nbsp;&nbsp;&nbsp;&nbsp;(define&nbsp;Stmt<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;(x)<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(match&nbsp;x<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(if&nbsp;,[Exp=
r&nbsp;-&gt;&nbsp;e]&nbsp;,[Stmt&nbsp;-&gt;&nbsp;s1]&nbsp;,[Stmt&nbsp;-&gt;=
&nbsp;s2])<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`(if&nbsp=
;,e&nbsp;,s1&nbsp;,s2)]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(set!&nbsp;,v&=
nbsp;,[Expr&nbsp;-&gt;&nbsp;e])<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(guard&nb=
sp;(symbol?&nbsp;v))<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`(set!&nb=
sp;,v&nbsp;,e)]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[,x&nbsp;(error=
&nbsp;'parse&nbsp;"invalid&nbsp;statement&nbsp;~s"&nbsp;x)])))<br>

&nbsp;&nbsp;&nbsp;&nbsp;(define&nbsp;Expr<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;(x)<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(match&nbsp;x<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[,v&nbsp;(guard=
&nbsp;(symbol?&nbsp;v))&nbsp;v]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[,n&nbsp;(guard=
&nbsp;(integer?&nbsp;n))&nbsp;n]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(if&nbsp;,[e1]=
&nbsp;,[e2]&nbsp;,[e3])<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`(if&nbsp=
;,e1&nbsp;,e2&nbsp;,e3)]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(,[rator]&nbsp=
;,[rand*]&nbsp;...)&nbsp;`(,rator&nbsp;,rand*&nbsp;...)]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[,x&nbsp;(error=
&nbsp;'parse&nbsp;"invalid&nbsp;expression&nbsp;~s"&nbsp;x)])))<br>

&nbsp;&nbsp;&nbsp;&nbsp;(Prog&nbsp;x)))
<br>
<br>
(parse&nbsp;'(program&nbsp;(set!&nbsp;x&nbsp;3)&nbsp;(+&nbsp;x&nbsp;4)))&nb=
sp;<img src=3D"https://web.archive.org/web/20180718113252im_/https://www.cs=
.indiana.edu/chezscheme/match/math/match/0.gif" alt=3D"<graphic>">&nbsp;(be=
gin&nbsp;(set!&nbsp;x&nbsp;3)&nbsp;(+&nbsp;x&nbsp;4))</tt>
</p><p>A mentioned above, the operator specified in the cata syntax can be =
any
expression.
We can make use of this to pass along an environment, if needed, say
to handle a version of the language above extended with a
<tt>let</tt> expression that creates bindings that might shadow keywords.

</p><p>

 =20
 =20
 =20
  </p><table><tbody><tr><td nowrap=3D"">
&lt;Prog&gt;</td><td align=3D"center"><img src=3D"https://web.archive.org/w=
eb/20180718113252im_/https://www.cs.indiana.edu/chezscheme/match/math/match=
/1.gif" alt=3D"<graphic>"></td><td nowrap=3D""><tt>(program</tt> &lt;Stmt&g=
t;* &lt;Expr&gt;<tt>)</tt></td></tr><tr><td nowrap=3D"">
&lt;Stmt&gt;</td><td align=3D"center"><img src=3D"https://web.archive.org/w=
eb/20180718113252im_/https://www.cs.indiana.edu/chezscheme/match/math/match=
/1.gif" alt=3D"<graphic>"></td><td nowrap=3D""><tt>(if</tt> &lt;Expr&gt; &l=
t;Stmt&gt; &lt;Stmt&gt;<tt>)</tt></td></tr><tr><td nowrap=3D"">
          </td><td align=3D"center">|</td><td nowrap=3D""><tt>(set!</tt> &l=
t;var&gt; &lt;Expr&gt;<tt>)</tt></td></tr><tr><td nowrap=3D"">
&lt;Expr&gt;</td><td align=3D"center"><img src=3D"https://web.archive.org/w=
eb/20180718113252im_/https://www.cs.indiana.edu/chezscheme/match/math/match=
/1.gif" alt=3D"<graphic>"></td><td nowrap=3D"">&lt;var&gt;</td></tr><tr><td=
 nowrap=3D"">
          </td><td align=3D"center">|</td><td nowrap=3D"">&lt;integer&gt;</=
td></tr><tr><td nowrap=3D"">
          </td><td align=3D"center">|</td><td nowrap=3D""><tt>(if</tt> &lt;=
Expr&gt; &lt;Expr&gt; &lt;Expr&gt;<tt>)</tt></td></tr><tr><td nowrap=3D"">
          </td><td align=3D"center">|</td><td nowrap=3D""><tt>(let</tt> <tt=
>((</tt><tt><i>var</i></tt> &lt;Expr&gt;<tt>))</tt> &lt;Expr&gt;<tt>)</tt><=
/td></tr><tr><td nowrap=3D"">
          </td><td align=3D"center">|</td><td nowrap=3D""><tt>(</tt>&lt;Exp=
r&gt; &lt;Expr&gt;*<tt>)</tt>
</td></tr></tbody></table>

<p>
In the following version of <tt>parse</tt>, the output is more structured,
with an explicit <tt>call</tt> keyword so that there will not be any
confusion in the output between a call to the value of an <tt>if</tt>
variable and a <tt>if</tt> expression keyed by the <tt>if</tt> keyword.

</p><p>

</p><p><tt>(define&nbsp;parse<br>

&nbsp;&nbsp;(lambda&nbsp;(x)<br>

&nbsp;&nbsp;&nbsp;&nbsp;(define&nbsp;Prog<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;(x)<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(match&nbsp;x<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(program&nbsp;=
,[Stmt&nbsp;-&gt;&nbsp;s*]&nbsp;...&nbsp;,[(Expr&nbsp;'())&nbsp;-&gt;&nbsp;=
e])<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`(begin&n=
bsp;,s*&nbsp;...&nbsp;,e)]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[,x&nbsp;(error=
&nbsp;'parse&nbsp;"invalid&nbsp;program&nbsp;~s"&nbsp;x)])))<br>

&nbsp;&nbsp;&nbsp;&nbsp;(define&nbsp;Stmt<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;(x)<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(match&nbsp;x<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(if&nbsp;,[(Ex=
pr&nbsp;'())&nbsp;-&gt;&nbsp;e]&nbsp;,[Stmt&nbsp;-&gt;&nbsp;s1]&nbsp;,[Stmt=
&nbsp;-&gt;&nbsp;s2])<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`(if&nbsp=
;,e&nbsp;,s1&nbsp;,s2)]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(set!&nbsp;,v&=
nbsp;,[(Expr&nbsp;'())&nbsp;-&gt;&nbsp;e])<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(guard&nb=
sp;(symbol?&nbsp;v))<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`(set!&nb=
sp;,v&nbsp;,e)]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[,x&nbsp;(error=
&nbsp;'parse&nbsp;"invalid&nbsp;statement&nbsp;~s"&nbsp;x)])))<br>

&nbsp;&nbsp;&nbsp;&nbsp;(define&nbsp;Expr<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;(env)<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(lambda&nbsp;(x)<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(match&nbsp;x<b=
r>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[,v=
&nbsp;(guard&nbsp;(symbol?&nbsp;v))&nbsp;v]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[,n=
&nbsp;(guard&nbsp;(integer?&nbsp;n))&nbsp;n]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(i=
f&nbsp;,[e1]&nbsp;,[e2]&nbsp;,[e3])<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;(guard&nbsp;(not&nbsp;(memq&nbsp;'if&nbsp;env)))<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;`(if&nbsp;,e1&nbsp;,e2&nbsp;,e3)]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(l=
et&nbsp;([,v&nbsp;,[e]])&nbsp;,[(Expr&nbsp;(cons&nbsp;v&nbsp;env))&nbsp;-&g=
t;&nbsp;body])<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;(guard&nbsp;(not&nbsp;(memq&nbsp;'let&nbsp;env))&nbsp;(symbol?&nbsp;v))<=
br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;`(let&nbsp;([,v&nbsp;,e])&nbsp;,body)]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(,=
[rator]&nbsp;,[rand*]&nbsp;...)<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;`(call&nbsp;,rator&nbsp;,rand*&nbsp;...)]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[,x=
&nbsp;(error&nbsp;'parse&nbsp;"invalid&nbsp;expression&nbsp;~s"&nbsp;x)])))=
)<br>

&nbsp;&nbsp;&nbsp;&nbsp;(Prog&nbsp;x)))
<br>
<br>
(parse<br>

&nbsp;&nbsp;'(program&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;<img src=3D"https://web.archive.org/web/20180718113252=
im_/https://www.cs.indiana.edu/chezscheme/match/gifs/ghostRightarrow.gif">&=
nbsp;(begin<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(let&nbsp;([if&nbsp;(if&nbsp;x&nbsp;list&nbsp=
;values)])&nbsp;<img src=3D"https://web.archive.org/web/20180718113252im_/h=
ttps://www.cs.indiana.edu/chezscheme/match/math/match/0.gif" alt=3D"<graphi=
c>">&nbsp;&nbsp;&nbsp;(let&nbsp;([if&nbsp;(if&nbsp;x&nbsp;list&nbsp;values)=
])<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;1&nbsp;2&nbsp;3))))&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;<img src=3D"https://web.archive.org/web/20180718113252im_/h=
ttps://www.cs.indiana.edu/chezscheme/match/gifs/ghostRightarrow.gif">&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;(call&nbsp;if&nbsp;1&nbsp;2&nbsp;3)))</tt>
</p><p>When recurring via a cata call without an explicit operator, e.g.,
within the <tt>Expr</tt> <tt>if</tt> and application cases, the value of
<tt>Expr</tt>'s <tt>env</tt> argument does not change, which is good,
since nothing needs to be added to the environment at those call sites.
The value of <tt>Expr</tt>'s <tt>x</tt> argument does not
change either, so the clause that reads

</p><p>

</p><p><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;[,v&nbsp;(guard&nbsp;(symbol?&nbsp;v))&nbsp;v]</tt>
</p><p>should not be replaced by one that reads

</p><p>

</p><p><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;[,v&nbsp;(guard&nbsp;(symbol?&nbsp;v))&nbsp;x]</tt>
</p><p>or nested expressions will not be handled properly.
In general, the values of any variables bound outside a <tt>match</tt>
expression do not change when a <tt>cata</tt> call is used to recur
directly to the <tt>match</tt> itself.

</p><p>
<a name=3D"mrvs"></a>In some cases, a procedure that uses <tt>match</tt> wi=
ll need to return
multiple values.
Programs return multiple values using the <tt>values</tt>
procedure and receive them using the <tt>let-values</tt>
syntactic form.
These features are described in
<a class=3D"ref" href=3D"https://web.archive.org/web/20180718113252/http://=
www.scheme.com/tspl4/control.html#SECTMRVS"><i>The
Scheme Programming Language</i></a>.
Here is a simple example adapted from <i>The Scheme Programming Language</i=
>.

</p><p>

</p><p><tt>(define&nbsp;split<br>

&nbsp;&nbsp;(lambda&nbsp;(ls)<br>

&nbsp;&nbsp;&nbsp;&nbsp;(if&nbsp;(or&nbsp;(null?&nbsp;ls)&nbsp;(null?&nbsp;=
(cdr&nbsp;ls)))<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(values&nbsp;ls&nbsp;'())<b=
r>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(let-values&nbsp;([(odds&nb=
sp;evens)&nbsp;(split&nbsp;(cddr&nbsp;ls))])<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(values&nbsp;(c=
ons&nbsp;(car&nbsp;ls)&nbsp;odds)<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cons&nbsp;(cadr&nbsp;ls)&nbsp;evens))))))
<br>
<br>
(split&nbsp;'(a&nbsp;b&nbsp;c&nbsp;d&nbsp;e&nbsp;f))&nbsp;<img src=3D"https=
://web.archive.org/web/20180718113252im_/https://www.cs.indiana.edu/chezsch=
eme/match/math/match/0.gif" alt=3D"<graphic>">&nbsp;(a&nbsp;c&nbsp;e)<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=3D"=
https://web.archive.org/web/20180718113252im_/https://www.cs.indiana.edu/ch=
ezscheme/match/gifs/ghostRightarrow.gif">&nbsp;(b&nbsp;d&nbsp;f)</tt>
</p><p>The <tt>values</tt> procedure is used to return multiple values; it
takes an arbitrary number of arguments and returns them as the values.
If passed one value, <tt>values</tt> behaves like the identity.
<tt>let-values</tt> is like <tt>let</tt>, except that each binding binds
zero or more variables to zero or more return values.

</p><p>
The pattern matcher cata syntax can also be used to receive multiple
values.
When making implicit recursive calls using the cata (<tt>,[]</tt>) syntax,
one can include zero or more variables between the brackets
(after the <tt>-&gt;</tt>, if one is present),
each representing one of the expected return values.
<tt>split</tt> may thus be defined using <tt>match</tt> as follows.

</p><p>

</p><p><tt>(define&nbsp;split<br>

&nbsp;&nbsp;(lambda&nbsp;(ls)<br>

&nbsp;&nbsp;&nbsp;&nbsp;(match&nbsp;ls<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[()&nbsp;(values&nbsp;'()&nbsp;'())]<br=
>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(,x)&nbsp;(values&nbsp;`(,x)&nbsp;'())=
]<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[(,x&nbsp;,y&nbsp;.&nbsp;,[odds&nbsp;ev=
ens])<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(values&nbsp;(cons&nbsp;x&nbsp;od=
ds)<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;(cons&nbsp;y&nbsp;evens))])))
<br>
<br>
(split&nbsp;'(a&nbsp;b&nbsp;c&nbsp;d&nbsp;e&nbsp;f))&nbsp;<img src=3D"https=
://web.archive.org/web/20180718113252im_/https://www.cs.indiana.edu/chezsch=
eme/match/math/match/0.gif" alt=3D"<graphic>">&nbsp;(a&nbsp;c&nbsp;e)<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=3D"=
https://web.archive.org/web/20180718113252im_/https://www.cs.indiana.edu/ch=
ezscheme/match/gifs/ghostRightarrow.gif">&nbsp;(b&nbsp;d&nbsp;f)</tt>
</p><p>
=20
=20
</p><p></p><hr>=C2=A9&nbsp;2013&nbsp;R. Kent Dybvig
<p>


</p></body></html><!--
     FILE ARCHIVED ON 11:32:52 Jul 18, 2018 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 05:36:08 Jun 10, 2023.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
--><!--
playback timings (ms):
  captures_list: 80.229 (11)
  exclusion.robots: 0.217
  exclusion.robots.policy: 0.203
  cdx.remote: 0.078
  esindex: 0.009
  LoadShardBlock: 32.904 (3)
  PetaboxLoader3.datanode: 63.634 (5)
  load_resource: 251.442 (2)
  PetaboxLoader3.resolve: 199.22 (2)
-->
------MultipartBoundary--nPmWhCeRIg3jfxHsJ6UcEKc0rqcgmjfkQF41N0LW9S----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://web.archive.org/_static/css/banner-styles.css?v=S1zqJCYt

@charset "utf-8";

@import url("record.css");

#wm-ipp-base { height: 65px; padding: 0px; margin: 0px; border: none; backg=
round: none transparent; }

#wm-ipp { z-index: 2147483647; }

#wm-ipp, #wm-ipp * { font-family: "Lucida Grande", Helvetica, Arial, sans-s=
erif; font-size: 12px; line-height: 1.2; letter-spacing: 0px; width: auto; =
height: auto; max-width: none; max-height: none; min-height: 0px; outline: =
none; float: none; text-align: left; border: none; color: rgb(0, 0, 0); tex=
t-indent: 0px; position: initial; background: none; min-width: 0px !importa=
nt; }

#wm-ipp div, #wm-ipp canvas { display: block; }

#wm-ipp div, #wm-ipp tr, #wm-ipp td, #wm-ipp a, #wm-ipp form { padding: 0px=
; margin: 0px; border: none; border-radius: 0px; background-color: transpar=
ent; background-image: none; height: auto; }

#wm-ipp table { border: none; border-collapse: collapse; margin: 0px; paddi=
ng: 0px; width: auto; font-size: inherit; }

#wm-ipp form input { height: auto; display: inline; margin: 0px; color: rgb=
(0, 0, 0); background: none rgb(255, 255, 255); border: 1px solid rgb(102, =
102, 102); padding: 1px !important; }

#wm-ipp form input[type=3D"submit"] { padding: 0px 8px !important; margin: =
1px 0px 1px 5px !important; width: auto !important; border: 1px solid rgb(0=
, 0, 0) !important; background: rgb(255, 255, 255) !important; color: rgb(0=
, 0, 0) !important; }

#wm-ipp form input[type=3D"submit"]:hover { background: rgb(238, 238, 238) =
!important; cursor: pointer !important; }

#wm-ipp form input[type=3D"submit"]:active { transform: translateY(1px); }

#wm-ipp a { display: inline; }

#wm-ipp a:hover { text-decoration: underline; }

#wm-ipp a.wm-btn:hover { text-decoration: none; color: rgb(255, 255, 0) !im=
portant; }

#wm-ipp a.wm-btn:hover span { color: rgb(255, 255, 0) !important; }

#wm-ipp #wm-ipp-inside { margin: 0px 6px; border-right: 5px solid rgb(0, 0,=
 0); border-bottom: 5px solid rgb(0, 0, 0); border-left: 5px solid rgb(0, 0=
, 0); border-image: initial; border-top: none; background-color: rgba(255, =
255, 255, 0.9); box-shadow: rgb(51, 51, 51) 1px 1px 4px; border-radius: 0px=
 0px 8px 8px; }

#wm-ipp #wm-logo { padding: 0px 10px; vertical-align: middle; min-width: 10=
0px; flex: 0 0 100px; }

#wm-ipp .c { padding-left: 4px; }

#wm-ipp .c .u { margin-top: 4px !important; }

#wm-ipp .n { vertical-align: bottom; padding: 0px 0px 0px 5px !important; }

#wm-ipp .n a { text-decoration: none; color: rgb(51, 51, 255); font-weight:=
 bold; }

#wm-ipp .n .b { overflow: visible; white-space: nowrap; color: rgb(153, 153=
, 170); vertical-align: middle; padding: 0px 6px 0px 0px !important; text-a=
lign: right !important; }

#wm-ipp .n .y .b { padding: 0px 6px 2px 0px !important; }

#wm-ipp .n .c { background: rgb(0, 0, 0); color: rgb(255, 255, 0); font-wei=
ght: bold; text-align: center; padding: 0px !important; }

#wm-ipp.hi .n td.c { color: rgb(236, 0, 140); }

#wm-ipp .n td.f { overflow: visible; white-space: nowrap; color: rgb(153, 1=
53, 170); vertical-align: middle; padding: 0px 0px 0px 6px !important; text=
-align: left !important; }

#wm-ipp .n tr.m td { text-transform: uppercase; white-space: nowrap; paddin=
g: 2px 0px; }

#wm-ipp .c .s { vertical-align: bottom; padding: 0px 5px 0px 0px !important=
; }

#wm-ipp #wm-nav-captures { white-space: nowrap; }

#wm-ipp .c .s a.t { color: rgb(51, 51, 255); font-weight: bold; line-height=
: 1.8; }

#wm-ipp .c .s div.r { color: rgb(102, 102, 102); font-size: 9px; white-spac=
e: nowrap; }

#wm-ipp .c .k { padding-bottom: 1px; }

#wm-ipp .c .s { padding: 0px 5px 2px 0px !important; }

#wm-ipp td#displayMonthEl { padding: 2px 0px !important; }

#wm-ipp td#displayYearEl { padding: 0px 0px 2px !important; }

div#wm-ipp-sparkline { position: relative; white-space: nowrap; background-=
color: rgb(255, 255, 255); cursor: pointer; line-height: 0.9; }

#sparklineImgId, #wm-sparkline-canvas { position: relative; z-index: 9012; =
max-width: none; }

#wm-ipp-sparkline div.yt { position: absolute; top: 0px; z-index: 9010 !imp=
ortant; background-color: rgb(255, 255, 0) !important; }

#wm-ipp-sparkline div.mt { position: absolute; top: 0px; z-index: 9013 !imp=
ortant; background-color: rgb(236, 0, 140) !important; }

#wm-ipp .r { margin-left: 4px; }

#wm-ipp .r a { color: rgb(51, 51, 255); border: none; position: relative; b=
ackground-color: transparent; text-decoration: none; background-repeat: no-=
repeat !important; background-position: 100% 100% !important; }

#wm-ipp #wm-capinfo { border-radius: 0px 0px 4px 4px; }

#wm-ipp #wm-capinfo .c-logo { display: block; float: left; margin-right: 3p=
x; width: 90px; min-height: 90px; max-height: 290px; border-radius: 45px; o=
verflow: hidden; background-position: 50% center; background-size: auto 90p=
x; box-shadow: rgb(208, 208, 208) 0px 0px 2px 2px inset; }

#wm-ipp #wm-capinfo .c-logo span { display: inline-block; }

#wm-ipp #wm-capinfo .c-logo img { height: 90px; position: relative; left: -=
50%; }

#wm-ipp #wm-capinfo .wm-title { font-size: 130%; }

#wm-ipp #wm-capinfo a.wm-selector { display: inline-block; color: rgb(170, =
170, 170); padding: 2px 8px; text-decoration: none !important; }

#wm-ipp #wm-capinfo a.wm-selector.selected { background-color: rgb(102, 102=
, 102); }

#wm-ipp #wm-capinfo a.wm-selector:hover { color: rgb(255, 255, 255); }

#wm-ipp #wm-capinfo.notice-only #wm-capinfo-collected-by, #wm-ipp #wm-capin=
fo.notice-only #wm-capinfo-timestamps { display: none; }

#wm-ipp #wm-capinfo #wm-capinfo-notice .wm-capinfo-content { background-col=
or: rgb(255, 255, 0); padding: 5px; font-size: 14px; text-align: center; }

#wm-ipp #wm-capinfo #wm-capinfo-notice .wm-capinfo-content * { font-size: 1=
4px; text-align: center; }

#wm-ipp #wm-expand { right: 1px; bottom: -1px; color: rgb(255, 255, 255); b=
ackground-color: rgb(102, 102, 102) !important; padding: 0px 5px 0px 3px !i=
mportant; border-radius: 3px 3px 0px 0px !important; }

#wm-ipp #wm-expand span { color: rgb(255, 255, 255); }

#wm-ipp #wm-expand #wm-expand-icon { display: inline-block; transition: tra=
nsform 0.5s ease 0s; transform-origin: 50% 45%; }

#wm-ipp #wm-expand.wm-open #wm-expand-icon { transform: rotate(180deg); }

#wm-ipp #wmtb { text-align: right; }

#wm-ipp #wmtb #wmtbURL { width: calc(100% - 45px); }

#wm-ipp #wm-graph-anchor { border-right: 1px solid rgb(204, 204, 204); }

html.wb-highlight { box-shadow: rgb(165, 14, 58) 0px 0px 0px 3px inset !imp=
ortant; }

.wb-highlight { outline: rgb(165, 14, 58) solid 3px !important; }

#wm-ipp-print { display: none !important; }

@media print {
  #wm-ipp-base { display: none !important; }
  #wm-ipp-print { white-space: nowrap; overflow: hidden; text-overflow: ell=
ipsis; display: block !important; }
}

@media (max-width: 414px) {
  #wm-ipp .xxs { display: none !important; }
}

@media (min-width: 1055px) {
  #wm-ipp #wm-graph-anchor { display: block !important; }
}

@media (max-width: 1054px) {
  #wm-ipp #wm-graph-anchor { display: none !important; }
}

@media (max-width: 1163px) {
  #wm-logo { display: none !important; }
}

#wm-btns { white-space: nowrap; margin-top: -2px; }

#wm-btns #wm-save-snapshot-open { margin-right: 7px; top: -6px; }

#wm-btns #wm-sign-in { box-sizing: content-box; display: none; margin-right=
: 7px; top: -8px; border: 2px solid rgb(0, 0, 0); border-radius: 14px; padd=
ing-right: 2px; padding-bottom: 2px; width: 11px; height: 11px; }

#wm-btns #wm-sign-in > .iconochive-person { font-size: 12.5px; }

#wm-save-snapshot-open > .iconochive-web { color: rgb(0, 0, 0); font-size: =
160%; }

#wm-ipp #wm-share { display: flex; align-items: flex-end; justify-content: =
space-between; }

#wm-share > #wm-screenshot { display: inline-block; margin-right: 3px; visi=
bility: hidden; }

#wm-screenshot > .iconochive-image { color: rgb(0, 0, 0); font-size: 160%; =
}

#wm-share > #wm-video { display: inline-block; margin-right: 3px; visibilit=
y: hidden; }

#wm-video > .iconochive-movies { color: rgb(0, 0, 0); display: inline-block=
; font-size: 150%; margin-bottom: 2px; }

#wm-btns #wm-save-snapshot-in-progress { display: none; font-size: 160%; op=
acity: 0.5; position: relative; margin-right: 7px; top: -5px; }

#wm-btns #wm-save-snapshot-success { display: none; color: green; position:=
 relative; top: -7px; }

#wm-btns #wm-save-snapshot-fail { display: none; color: red; position: rela=
tive; top: -7px; }

.wm-icon-screen-shot { display: inline-block; background: url("../images/we=
b-screenshot.svg") 0% 0% / contain no-repeat !important; width: 22px !impor=
tant; height: 19px !important; }

#donato { height: 0px; margin: 0px; padding: 0px; border-bottom: 1px solid =
rgb(153, 153, 153) !important; }

body.wm-modal { height: auto !important; overflow: hidden !important; }

#donato #donato-base { width: 100%; height: 100%; margin: 0px; padding: 0px=
; position: absolute; z-index: 2147483639; }

body.wm-modal #donato #donato-base { position: fixed; inset: 0px; z-index: =
2147483640; }

.wb-autocomplete-suggestions { font-family: "Lucida Grande", Helvetica, Ari=
al, sans-serif; font-size: 12px; text-align: left; cursor: default; border-=
width: 0px 1px 1px; border-right-style: solid; border-bottom-style: solid; =
border-left-style: solid; border-right-color: rgb(204, 204, 204); border-bo=
ttom-color: rgb(204, 204, 204); border-left-color: rgb(204, 204, 204); bord=
er-image: initial; border-top-style: initial; border-top-color: initial; ba=
ckground: rgb(255, 255, 255); box-shadow: rgba(0, 0, 0, 0.1) -1px 1px 3px; =
position: absolute; display: none; z-index: 2147483647; max-height: 254px; =
overflow: hidden auto; box-sizing: border-box; }

.wb-autocomplete-suggestion { position: relative; padding: 0px 0.6em; line-=
height: 23px; white-space: nowrap; overflow: hidden; text-overflow: ellipsi=
s; font-size: 1.02em; color: rgb(51, 51, 51); }

.wb-autocomplete-suggestion b { font-weight: bold; }

.wb-autocomplete-suggestion.selected { background: rgb(240, 240, 240); }
------MultipartBoundary--nPmWhCeRIg3jfxHsJ6UcEKc0rqcgmjfkQF41N0LW9S----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://web.archive.org/_static/css/record.css

@charset "utf-8";

.__wb_overlay { opacity: 0.6; background-color: rgb(0, 0, 0); position: fix=
ed; width: 100%; height: 100%; top: 0px; left: 0px; padding: 0px !important=
; border: 0px !important; margin: 0px !important; border-radius: 0px !impor=
tant; z-index: 2147483643 !important; }

#__wb_record_overlay_div { cursor: wait !important; }

.__wb_record_content { opacity: 1; position: fixed; top: 50%; left: 50%; bo=
rder-radius: 8px; box-shadow: rgb(0, 0, 0) 0px 0px 30px 5px; margin: 0px !i=
mportant; padding: 0px !important; background-color: rgb(255, 255, 255) !im=
portant; z-index: 2147483644 !important; }

#__wb_record_content_loader { cursor: wait !important; padding-top: 30px !i=
mportant; margin-left: -287px !important; margin-top: -177px !important; wi=
dth: 574px !important; height: 355px !important; }

#__wb_record_content_done { margin-left: -427px !important; margin-top: -17=
7px !important; width: 855px !important; height: 355px !important; }

.__wb_record_content > * { margin: auto !important; display: block !importa=
nt; text-align: center !important; font-family: "Open Sans", "Helvetica Neu=
e", Helvetica, Arial, sans-serif !important; }

.__wb_record_content > wb_h1 { line-height: 2em; font-size: 36px !important=
; color: rgb(34, 34, 34) !important; margin: 0px !important; padding: 0px !=
important; font-weight: normal !important; width: auto !important; height: =
auto !important; }

.__wb_record_content > wb_p { line-height: 2em; font-size: 17px !important;=
 color: rgb(34, 34, 34) !important; margin: 8px 0px !important; padding: 0p=
x !important; }

.__wb_record_content > #_wb_logo { margin-bottom: 10px !important; }

.__wb_record_content > #_wb_spinner { margin-top: 30px !important; margin-b=
ottom: 30px !important; }

.__wb_record_content > #_wb_curr_url { text-decoration: underline !importan=
t; font-weight: bold !important; }

#__wb_record_content_done > #__wb_link { font-size: 20px !important; border=
: 1px solid rgb(170, 170, 170) !important; padding: 3px !important; text-al=
ign: center !important; width: 80% !important; height: auto !important; }

#__wb_record_content_done > #__wb_link:focus { outline: 0px !important; bor=
der-color: rgb(66, 139, 202) !important; }

#__wb_record_content_done > #__wb_donate_close { float: right; display: inl=
ine-block; font-size: 18px !important; width: auto !important; margin: 0px =
!important; padding: 8px 8px 0px 0px !important; }

#__wb_donate_close > #__wb_record_done_close { display: inline-block; curso=
r: pointer !important; vertical-align: bottom !important; }

#__wb_record_content_done > #__wb_donate_close a { color: rgb(66, 139, 202)=
 !important; }

#__wb_record_content_done > #__wb_donate_close a:link { color: rgb(66, 139,=
 202) !important; text-decoration: none !important; margin-right: 16px !imp=
ortant; }

#__wb_record_content_done > #__wb_donate_close a:visited { color: rgb(66, 1=
39, 202) !important; }

#__wb_record_content_done > #__wb_donate_close a:hover { color: rgb(0, 177,=
 247) !important; }

#__wb_spinningSquaresG { position: relative; width: 240px; height: 20px; pa=
dding: 0px !important; margin: 30px 0px 30px 160px !important; border: 0px =
!important; border-radius: 0px !important; }

.__wb_spinningSquaresG { position: absolute; top: 0px; background-color: rg=
b(0, 0, 0); width: 22px; height: 22px; animation-name: bounce_spinningSquar=
esG; animation-duration: 1.9s; animation-iteration-count: infinite; transfo=
rm: scale(0.3); margin: 0px !important; padding: 0px !important; border: 0p=
x !important; border-radius: 0px !important; }

#__wb_spinningSquaresG_1 { left: 0px; animation-delay: 0.76s; }

#__wb_spinningSquaresG_2 { left: 30px; animation-delay: 0.95s; }

#__wb_spinningSquaresG_3 { left: 60px; animation-delay: 1.14s; }

#__wb_spinningSquaresG_4 { left: 90px; animation-delay: 1.33s; }

#__wb_spinningSquaresG_5 { left: 120px; animation-delay: 1.52s; }

#__wb_spinningSquaresG_6 { left: 150px; animation-delay: 1.71s; }

#__wb_spinningSquaresG_7 { left: 180px; animation-delay: 1.9s; }

#__wb_spinningSquaresG_8 { left: 210px; animation-delay: 2.09s; }

@-webkit-keyframes bounce_spinningSquaresG {=20
  0% { transform: scale(1); background-color: rgb(0, 0, 0); }
  100% { transform: scale(0.3) rotate(90deg); background-color: rgb(255, 25=
5, 255); }
}

@keyframes bounce_spinningSquaresG {=20
  0% { transform: scale(1); background-color: rgb(0, 0, 0); }
  100% { transform: scale(0.3) rotate(90deg); background-color: rgb(255, 25=
5, 255); }
}
------MultipartBoundary--nPmWhCeRIg3jfxHsJ6UcEKc0rqcgmjfkQF41N0LW9S----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://web.archive.org/_static/css/iconochive.css?v=qtvMKcIJ

@charset "utf-8";

@font-face { font-family: Iconochive-Regular; src: url("https://archive.org=
/includes/fonts/Iconochive-Regular.woff?-ccsheb") format("woff"), url("http=
s://archive.org/includes/fonts/Iconochive-Regular.ttf?-ccsheb") format("tru=
etype"); font-weight: normal; font-style: normal; }

[class^=3D"iconochive-"], [class*=3D" iconochive-"] { speak: none; font-sty=
le: normal; font-weight: normal; font-variant: normal; text-transform: none=
; line-height: 1; -webkit-font-smoothing: antialiased; font-family: Iconoch=
ive-Regular !important; }

.iconochive-Uplevel::before { content: "=E2=86=B5"; }

.iconochive-exit::before { content: "=F0=9F=9A=A3"; }

.iconochive-beta::before { content: "=CE=B2"; }

.iconochive-logo::before { content: "=F0=9F=8F=9B"; }

.iconochive-audio::before { content: "=F0=9F=95=A8"; }

.iconochive-movies::before { content: "=F0=9F=8E=9E"; }

.iconochive-software::before { content: "=F0=9F=92=BE"; }

.iconochive-texts::before { content: "=F0=9F=95=AE"; }

.iconochive-etree::before { content: "=F0=9F=8E=A4"; }

.iconochive-image::before { content: "=F0=9F=96=BC"; }

.iconochive-web::before { content: "=F0=9F=97=94"; }

.iconochive-collection::before { content: "=E2=88=91"; }

.iconochive-folder::before { content: "=F0=9F=93=82"; }

.iconochive-data::before { content: "=F0=9F=97=83"; }

.iconochive-tv::before { content: "=F0=9F=93=BA"; }

.iconochive-article::before { content: "=F0=9F=97=8F"; }

.iconochive-question::before { content: "=E2=8D=B0"; }

.iconochive-question-dark::before { content: "?"; }

.iconochive-info::before { content: "i"; }

.iconochive-info-small::before { content: "=E2=93=98"; }

.iconochive-comment::before { content: "=F0=9F=97=A9"; }

.iconochive-comments::before { content: "=F0=9F=97=AA"; }

.iconochive-person::before { content: "=F0=9F=91=A4"; }

.iconochive-people::before { content: "=F0=9F=91=A5"; }

.iconochive-eye::before { content: "=F0=9F=91=81"; }

.iconochive-rss::before { content: "=E2=88=9E"; }

.iconochive-time::before { content: "=F0=9F=95=91"; }

.iconochive-quote::before { content: "=E2=9D=9D"; }

.iconochive-disc::before { content: "=F0=9F=92=BF"; }

.iconochive-tv-commercial::before { content: "=F0=9F=92=B0"; }

.iconochive-search::before { content: "=F0=9F=94=8D"; }

.iconochive-search-star::before { content: "=E2=9C=BD"; }

.iconochive-tiles::before { content: "=E2=8A=9E"; }

.iconochive-list::before { content: "=E2=87=B6"; }

.iconochive-list-bulleted::before { content: "=E2=8C=97"; }

.iconochive-latest::before { content: "=E2=88=88"; }

.iconochive-left::before { content: "=CB=82"; }

.iconochive-right::before { content: "=CB=83"; }

.iconochive-left-solid::before { content: "=E2=97=82"; }

.iconochive-right-solid::before { content: "=E2=96=B8"; }

.iconochive-up-solid::before { content: "=E2=96=B4"; }

.iconochive-down-solid::before { content: "=E2=96=BE"; }

.iconochive-dot::before { content: "=E2=8F=A4"; }

.iconochive-dots::before { content: "=E2=96=A6"; }

.iconochive-columns::before { content: "=E2=96=AF"; }

.iconochive-sort::before { content: "=E2=87=95"; }

.iconochive-atoz::before { content: "=F0=9F=94=A4"; }

.iconochive-ztoa::before { content: "=F0=9F=94=A5"; }

.iconochive-upload::before { content: "=F0=9F=93=A4"; }

.iconochive-download::before { content: "=F0=9F=93=A5"; }

.iconochive-favorite::before { content: "=E2=98=85"; }

.iconochive-heart::before { content: "=E2=99=A5"; }

.iconochive-play::before { content: "=E2=96=B6"; }

.iconochive-play-framed::before { content: "=F0=9F=8E=AC"; }

.iconochive-fullscreen::before { content: "=E2=9B=B6"; }

.iconochive-mute::before { content: "=F0=9F=94=87"; }

.iconochive-unmute::before { content: "=F0=9F=94=8A"; }

.iconochive-share::before { content: "=F0=9F=8E=81"; }

.iconochive-edit::before { content: "=E2=9C=8E"; }

.iconochive-reedit::before { content: "=E2=9C=90"; }

.iconochive-gear::before { content: "=E2=9A=99"; }

.iconochive-remove-circle::before { content: "=E2=9D=8E"; }

.iconochive-plus-circle::before { content: "=F0=9F=97=96"; }

.iconochive-minus-circle::before { content: "=F0=9F=97=95"; }

.iconochive-x::before { content: "=F0=9F=97=99"; }

.iconochive-fork::before { content: "=E2=8B=94"; }

.iconochive-trash::before { content: "=F0=9F=97=91"; }

.iconochive-warning::before { content: "=E2=9A=A0"; }

.iconochive-flash::before { content: "=F0=9F=97=B2"; }

.iconochive-world::before { content: "=F0=9F=97=BA"; }

.iconochive-lock::before { content: "=F0=9F=94=92"; }

.iconochive-unlock::before { content: "=F0=9F=94=93"; }

.iconochive-twitter::before { content: "=F0=9F=90=A6"; }

.iconochive-facebook::before { content: "f"; }

.iconochive-googleplus::before { content: "g"; }

.iconochive-reddit::before { content: "=F0=9F=91=BD"; }

.iconochive-tumblr::before { content: "T"; }

.iconochive-pinterest::before { content: "=F0=9D=93=9F"; }

.iconochive-popcorn::before { content: "=F0=9F=92=A5"; }

.iconochive-email::before { content: "=F0=9F=93=A7"; }

.iconochive-embed::before { content: "=F0=9F=94=97"; }

.iconochive-gamepad::before { content: "=F0=9F=95=B9"; }

.iconochive-Zoom_In::before { content: "+"; }

.iconochive-Zoom_Out::before { content: "-"; }

.iconochive-RSS::before { content: "=F0=9F=93=A8"; }

.iconochive-Light_Bulb::before { content: "=F0=9F=92=A1"; }

.iconochive-Add::before { content: "=E2=8A=95"; }

.iconochive-Tab_Activity::before { content: "=E2=8C=98"; }

.iconochive-Forward::before { content: "=E2=8F=A9"; }

.iconochive-Backward::before { content: "=E2=8F=AA"; }

.iconochive-No_Audio::before { content: "=F0=9F=94=88"; }

.iconochive-Pause::before { content: "=E2=8F=B8"; }

.iconochive-No_Favorite::before { content: "=E2=98=86"; }

.iconochive-Unike::before { content: "=E2=99=A1"; }

.iconochive-Song::before { content: "=E2=99=AB"; }

.iconochive-No_Flag::before { content: "=E2=9A=90"; }

.iconochive-Flag::before { content: "=E2=9A=91"; }

.iconochive-Done::before { content: "=E2=9C=93"; }

.iconochive-Check::before { content: "=E2=9C=94"; }

.iconochive-Refresh::before { content: "=E2=9F=B3"; }

.iconochive-Headphones::before { content: "=F0=9F=8E=A7"; }

.iconochive-Chart::before { content: "=F0=9F=93=88"; }

.iconochive-Bookmark::before { content: "=F0=9F=93=91"; }

.iconochive-Documents::before { content: "=F0=9F=93=9A"; }

.iconochive-Newspaper::before { content: "=F0=9F=93=B0"; }

.iconochive-Podcast::before { content: "=F0=9F=93=B6"; }

.iconochive-Radio::before { content: "=F0=9F=93=BB"; }

.iconochive-Cassette::before { content: "=F0=9F=93=BC"; }

.iconochive-Shuffle::before { content: "=F0=9F=94=80"; }

.iconochive-Loop::before { content: "=F0=9F=94=81"; }

.iconochive-Low_Audio::before { content: "=F0=9F=94=89"; }

.iconochive-First::before { content: "=F0=9F=8E=96"; }

.iconochive-Invisible::before { content: "=F0=9F=95=B6"; }

.iconochive-Computer::before { content: "=F0=9F=96=B3"; }
------MultipartBoundary--nPmWhCeRIg3jfxHsJ6UcEKc0rqcgmjfkQF41N0LW9S----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://web.archive.org/web/20180718113252cs_/https://www.cs.indiana.edu/chezscheme/match/base.css

@charset "utf-8";

body { background-color: rgb(255, 255, 255); }

a:link { color: blue; text-decoration: none; }

a:active { color: blue; text-decoration: none; }

a:visited { color: maroon; text-decoration: none; }

a:hover { color: white; text-decoration: none; background: blue; }

a.ref:link { color: blue; text-decoration: underline; }

a.ref:active { color: blue; text-decoration: underline; }

a.ref:visited { color: blue; text-decoration: underline; }

a.ref:hover { color: white; text-decoration: underline; background: blue; }

a.plainlink:link { color: blue; text-decoration: none; }

a.plainlink:active { color: blue; text-decoration: none; }

a.plainlink:visited { color: blue; text-decoration: none; }

a.plainlink:hover { color: white; text-decoration: none; background: blue; =
}

table.indent { margin-left: 20px; }
------MultipartBoundary--nPmWhCeRIg3jfxHsJ6UcEKc0rqcgmjfkQF41N0LW9S----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/_static/images/toolbar/wayback-toolbar-logo-200.png

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

------MultipartBoundary--nPmWhCeRIg3jfxHsJ6UcEKc0rqcgmjfkQF41N0LW9S----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/_static/images/toolbar/wm_tb_prv_on.png

iVBORw0KGgoAAAANSUhEUgAAAA4AAAAQCAYAAAAmlE46AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAMZJREFUeNqU07EKQWEUwHEuSSaLkicgg3TZzCySvIKk2GVgJZmsBg9g
8QK8gcHoASwGNoMS/l+db6Au3zn1W279b+fe796w779Cyimi7ymCFBbYox51CGLoYIS0XHv+C2uY
ynofExRmJWgG3fE7TGKMHuK/VrFhRJ7DRBmXN2XCBibIa87Ek5US2sM04Ro5DHDRhGbumMu6Szxc
QztndFHGVhPaOaCKFo6a0Iz5+jcoYYira2jnhhkKWNlO83ec0EYFu7cAAwCVABzGI3/GxAAAAABJ
RU5ErkJggg==

------MultipartBoundary--nPmWhCeRIg3jfxHsJ6UcEKc0rqcgmjfkQF41N0LW9S----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/_static/images/toolbar/wm_tb_nxt_on.png

iVBORw0KGgoAAAANSUhEUgAAAA4AAAAQCAYAAAAmlE46AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAMhJREFUeNqU0s8KAUEcwPHBJjm5KHkCV+07cJHkKZRyUK6cKYeVPxd5
BVcHjspB+VPKA7g4cHNQwndqp/awMb9ffdra+jazMxtx3c9UKTXCTgkmihK28JCWhG//2cARdcRt
wuBkMMQGRUloJo8F5shJQjMV/9D6SElCPQk0cUINMdvQTBYTHFCWhGaSeheOILihiwGeNuELM7Rx
NS//hUu0sLe9jjOqKIRFYSve0fP/nsevrTiBVfV3dHCxOSkdrjDGWnInXwEGAM40IjLd/vWIAAAA
AElFTkSuQmCC

------MultipartBoundary--nPmWhCeRIg3jfxHsJ6UcEKc0rqcgmjfkQF41N0LW9S----
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/_static/images/loading.gif

R0lGODlhFAAUAOMIAAAAABoaGjMzM0xMTGZmZoCAgJmZmbKysv//////////////////////////
/////yH/C05FVFNDQVBFMi4wAwEAAAAh+QQBCgAIACwAAAAAFAAUAAAEUxDJSau9CADMteZTEEje
hhzHJYqkiaLWOlZvGs8WDO6UIPAGw8TnAwWDEuKPcxQml0YnjzcYYAqFS7VqwWItWyuCQJB4s2Ax
mWxGg9bl6YQtl0cAACH5BAEKAA8ALAAAAAAUABQAAART8MlJq70vBMy15pMgSN72AMAliqSJotY6
Vm8azxYM7tQw8IfDxOcDBYMS4o9zFCaXRiePRyBgDIZLtWrBYi1b66NQkHizYDGZbEaD1uXphC2X
RwAAIfkEAQoADwAsAAAAABQAFAAABFPwyUmrvU8IzLXm0zBI3vYEwSWKpImi1jpWbxrPFgzuFEHw
AMDE5wMFgxLij3MUJpdGJ49XKGAOh0u1asFiLVvrw2CQeLNgMZlsRoPW5emELZdHAAAh+QQBCgAP
ACwAAAAAFAAUAAAEU/DJSau9bwzMteYTQUje9gjCJYqkiaLWOlZvGs8WDO5UUfCBwMTnAwWDEuKP
cxQml0Ynj2cwYACAS7VqwWItW+vjcJB4s2AxmWxGg9bl6YQtl0cAACH5BAEKAA8ALAAAAAAUABQA
AART8MlJq72PEMy15lNRSN72DMMliqSJotY6Vm8azxYM7pRh8ALBxOcDBYMS4o9zFCaXRiePdzhg
AoFLtWrBYi1b6wMAkHizYDGZbEaD1uXphC2XRwAAIfkEAQoADwAsAAAAABQAFAAABFPwyUmrva8U
zLXmk2FI3vYQxCWKpImi1jpWbxrPFgzu1HHwg8HE5wMFgxLij3MUJpdGJ48HAGAEgku1asFiLVvr
IxCQeLNgMZlsRoPW5emELZdHAAAh+QQBCgAPACwAAAAAFAAUAAAEU/DJSau9zxjMtebTcUje9hTF
JYqkiaLWOlZvGs8WDO4UAPAEwsTnAwWDEuKPcxQml0YnjxcIYAaDS7VqwWItW+tDIJB4s2AxmWxG
g9bl6YQtl0cAACH5BAEKAA8ALAAAAAAUABQAAART8MlJq73vHMy15hMASN72GMYliqSJotY6Vm8a
zxYM7lQQ8IXCxOcDBYMS4o9zFCaXRiePJxBgCIRLtWrBYi1b62MwkHizYDGZbEaD1uXphC2XRwAA
Ow==

------MultipartBoundary--nPmWhCeRIg3jfxHsJ6UcEKc0rqcgmjfkQF41N0LW9S----
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20180718113252im_/https://www.cs.indiana.edu/chezscheme/match/math/match/0.gif

R0lGODlhDQAIAIAAAAAAAP///yH5BAEAAAEALAAAAAANAAgAAAIRjG+Ae9oAY2R00qSkdjfw/hUA
Ow==

------MultipartBoundary--nPmWhCeRIg3jfxHsJ6UcEKc0rqcgmjfkQF41N0LW9S----
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20180718113252im_/https://www.cs.indiana.edu/chezscheme/match/math/match/1.gif

R0lGODlhFgAFAIAAAAAAAP///yH5BAEAAAEALAAAAAAWAAUAAAIPjI+JoO3BgJy0WvYyzg4XADs=

------MultipartBoundary--nPmWhCeRIg3jfxHsJ6UcEKc0rqcgmjfkQF41N0LW9S----
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: https://web.archive.org/web/20180718113252im_/https://www.cs.indiana.edu/chezscheme/match/gifs/ghostRightarrow.gif

R0lGODlhDQAJAIAAAP///wAAACH5BAEAAAAALAAAAAANAAkAAAIJhI+py+0Po4QFADs=

------MultipartBoundary--nPmWhCeRIg3jfxHsJ6UcEKc0rqcgmjfkQF41N0LW9S----
Content-Type: text/html
Content-ID: <frame-477E1324CC670A0426EA6B459EC5274B@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://archive.org/includes/donate.php?as_page=1&platform=wb&referer=https%3A//web.archive.org/web/20180718113252/https%3A//www.cs.indiana.edu/chezscheme/match/

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"></head><body></body></html>
------MultipartBoundary--nPmWhCeRIg3jfxHsJ6UcEKc0rqcgmjfkQF41N0LW9S------
